"""Initial migration

Revision ID: 0e4953842e53
Revises: 
Create Date: 2024-09-26 22:58:17.657434

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '0e4953842e53'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('resources',
    sa.Column('ResourceID', sa.Integer(), nullable=False),
    sa.Column('Name', sa.String(length=100), nullable=False),
    sa.Column('Rate', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('PastJobTitles', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('CurrentJobTitle', sa.String(length=100), nullable=True),
    sa.Column('PastWorkDomains', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('YearsOfExperience', sa.Integer(), nullable=True),
    sa.Column('AvailableDate', sa.Date(), nullable=True),
    sa.Column('OrgID', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['OrgID'], ['organizations.OrgID'], ),
    sa.PrimaryKeyConstraint('ResourceID')
    )
    op.drop_table('employee_skill_association')
    op.drop_table('skills')
    op.drop_table('employees')
    op.drop_table('teams')
    op.drop_table('projects')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('projects',
    sa.Column('ProjectID', sa.INTEGER(), server_default=sa.text('nextval(\'"projects_ProjectID_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('ProjectName', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('NumberOfDays', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('ProjectStartDate', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('Technology', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('Domain', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('RequiredResources', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('OrgID', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['OrgID'], ['organizations.OrgID'], name='projects_OrgID_fkey'),
    sa.PrimaryKeyConstraint('ProjectID', name='projects_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('teams',
    sa.Column('ProjectID', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('EmployeeIDs', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('TotalEmployees', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('OrgID', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['OrgID'], ['organizations.OrgID'], name='teams_OrgID_fkey'),
    sa.ForeignKeyConstraint(['ProjectID'], ['projects.ProjectID'], name='teams_ProjectID_fkey'),
    sa.PrimaryKeyConstraint('ProjectID', name='teams_pkey')
    )
    op.create_table('employees',
    sa.Column('EmployeeID', sa.INTEGER(), server_default=sa.text('nextval(\'"employees_EmployeeID_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('Name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('Rate', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.Column('PastJobTitles', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('CurrentJobTitle', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('PastWorkDomains', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('YearsOfExperience', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('AvailableDate', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('OrgID', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['OrgID'], ['organizations.OrgID'], name='employees_OrgID_fkey'),
    sa.PrimaryKeyConstraint('EmployeeID', name='employees_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('skills',
    sa.Column('SkillID', sa.INTEGER(), server_default=sa.text('nextval(\'"skills_SkillID_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('SkillName', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('SkillID', name='skills_pkey'),
    sa.UniqueConstraint('SkillName', name='skills_SkillName_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('employee_skill_association',
    sa.Column('EmployeeID', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('SkillID', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('Level', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['EmployeeID'], ['employees.EmployeeID'], name='employee_skill_association_EmployeeID_fkey'),
    sa.ForeignKeyConstraint(['SkillID'], ['skills.SkillID'], name='employee_skill_association_SkillID_fkey'),
    sa.PrimaryKeyConstraint('EmployeeID', 'SkillID', name='employee_skill_association_pkey')
    )
    op.drop_table('resources')
    # ### end Alembic commands ###
